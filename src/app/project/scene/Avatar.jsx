/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import React, { useRef, useMemo } from "react";
import { useGraph } from "@react-three/fiber";
import { useGLTF } from "@react-three/drei";
import { SkeletonUtils } from "three-stdlib";

import { gestureUrls, DEFAULT_INITIAL_CLIP } from "./animationPack";
import { cloneWithShadows, useFBXClips } from "./avatarUtils";
import AvatarAnimationManager from "./AvatarAnimationManager";

export function Avatar({
  initialClip = DEFAULT_INITIAL_CLIP, // e.g., "relieved-sigh"
  initialFade = 0.0,
  crossFade = 0.25,
  ...props
}) {
  const { scene } = useGLTF("/models/Avatar1.glb");

  // Clone keeps the skinning hierarchy intact + enables shadows
  const clone = useMemo(() => cloneWithShadows(scene), [scene]);
  useGraph(clone); // optional; keeps materials handy if you need them later

  // Scope: only animate this inner group (keep floor/cube unaffected)
  const outerRef = useRef();
  const avatarRef = useRef();

  // Load all gesture clips (first clip per FBX), named from filenames
  const clips = useFBXClips(gestureUrls());

  return (
    <group ref={outerRef} {...props} dispose={null}>
      <group ref={avatarRef}>
        <primitive object={clone} />
        <AvatarAnimationManager
          clips={clips}
          avatarRef={avatarRef}
          initialClip={initialClip}
          initialFade={initialFade}
          crossFade={crossFade}
        />
      </group>
    </group>
  );
}

useGLTF.preload("/models/Avatar1.glb");
